---
swagger: "2.0"
info:
  description: "Demo"
  version: "1.0.0"
  title: "Example API"
  termsOfService: ""
host: "virtserver.swaggerhub.com"
basePath: "/DIMIMPANTI/SE2ASSIGMENT/1.0.0"
schemes:
- "https"
- "http"
produces:
- "application/json"
paths:
  /basket:
    post:
      operationId: "basketPOST"
      parameters:
      - in: "body"
        name: "basket_post_request_body"
        required: true
        schema:
          $ref: "#/definitions/basket_post_request_body_1"
      responses:
        default:
          description: "None"
          schema:
            $ref: "#/definitions/inline_response_default_1"
      x-swagger-router-controller: "Default"
    put:
      operationId: "basketPUT"
      parameters:
      - in: "body"
        name: "basket_put_request_body"
        required: true
        schema:
          $ref: "#/definitions/basket_put_request_body_1"
      responses:
        default:
          description: "None"
          schema:
            $ref: "#/definitions/inline_response_default"
      x-swagger-router-controller: "Default"
  /order/{order_id}:
    get:
      operationId: "orderOrder_idGET"
      parameters:
      - name: "order_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "404":
          description: "That order doesn't exist"
        default:
          description: "None"
          schema:
            $ref: "#/definitions/inline_response_default_2"
      x-swagger-router-controller: "Default"
    put:
      operationId: "orderOrder_idPUT"
      parameters:
      - in: "body"
        name: "order_put_request_body"
        required: false
        schema:
          $ref: "#/definitions/order_put_request_body_1"
      - name: "order_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "Order updated"
          schema:
            type: "object"
            x-links:
            - path: "/order/{order_id}/payment"
              operation: "post"
            - path: "/order/{order_id}"
              operation: "get"
            - path: "/order/{order_id}"
              operation: "delete"
            - path: "/order/{order_id}"
              operation: "put"
        "404":
          description: "That order doesn't exist"
      x-swagger-router-controller: "Default"
    delete:
      operationId: "orderOrder_idDELETE"
      parameters:
      - name: "order_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "200":
          description: "Order canceled"
          schema:
            type: "object"
            x-links:
            - path: "/search"
              operation: "get"
        "404":
          description: "That order doesn't exist"
      x-swagger-router-controller: "Default"
  /order:
    post:
      operationId: "orderPOST"
      consumes:
      - "multipart/form-data"
      - "application/x-www-form-urlencoded"
      parameters:
      - name: "order document"
        in: "formData"
        required: true
        type: "file"
      responses:
        "200":
          description: "Order created successfully"
          schema:
            type: "object"
            x-links:
            - path: "/order/{order_id}/payment"
              operation: "post"
            - path: "/order/{order_id}"
              operation: "get"
            - path: "/order/{order_id}"
              operation: "delete"
            - path: "/order/{order_id}"
              operation: "put"
      x-swagger-router-controller: "Default"
  /product/{product_id}:
    get:
      operationId: "productProduct_idGET"
      parameters:
      - name: "product_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "404":
          description: "the product doesn't exist"
        default:
          description: "None"
          schema:
            $ref: "#/definitions/inline_response_default_3"
      x-swagger-router-controller: "Default"
  /product:
    post:
      operationId: "productPOST"
      parameters:
      - in: "body"
        name: "product_post_request_body"
        required: false
        schema:
          $ref: "#/definitions/product_post_request_body_1"
      security:
      - administrator:
        - "post:/product"
      responses:
        "404":
          description: "Not allowed"
        default:
          description: "None"
          schema:
            $ref: "#/definitions/product_post_request_body_1"
      x-swagger-router-controller: "Default"
    put:
      operationId: "productPUT"
      parameters:
      - in: "body"
        name: "product_put_request_body"
        required: false
        schema:
          $ref: "#/definitions/product_put_request_body_1"
      security:
      - administrator:
        - "put:/product"
      responses:
        "404":
          description: "the product doesn't exist"
        default:
          description: "None"
          schema:
            $ref: "#/definitions/inline_response_default_4"
      x-swagger-router-controller: "Default"
    delete:
      operationId: "productDELETE"
      parameters:
      - name: "name"
        in: "query"
        required: false
        type: "string"
      - name: "category"
        in: "query"
        required: false
        type: "string"
      security:
      - administrator:
        - "delete:/product"
      responses:
        "404":
          description: "the product doesn't exist"
        default:
          description: "None"
          schema:
            $ref: "#/definitions/product_post_request_body_1"
      x-swagger-router-controller: "Default"
  /search:
    get:
      description: "- \tThe user is able to search for products in the website using\
        \ name and/or category filter, view their general details and choose to view\
        \ their\n\tspecific details"
      operationId: "searchGET"
      parameters:
      - name: "name"
        in: "query"
        required: true
        type: "string"
      - name: "category"
        in: "query"
        required: true
        type: "string"
      responses:
        default:
          description: "None"
          schema:
            $ref: "#/definitions/inline_response_default_5"
      x-swagger-router-controller: "Default"
  /order/{order_id}/payment:
    post:
      description: "- \tPossible payment options are 'credit', 'cash', 'paypal'"
      operationId: "orderOrder_idPaymentPOST"
      parameters:
      - in: "body"
        name: "payment_post_request_body"
        required: false
        schema:
          $ref: "#/definitions/payment_post_request_body_1"
      - name: "order_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "400":
          description: "wrong amount"
          schema:
            type: "object"
            x-links:
            - path: "/order/{order_id}/payment"
              operation: "post"
            - path: "/order/{order_id}"
              operation: "get"
        default:
          description: "None"
          schema:
            type: "object"
            x-links:
            - path: "/order/{order_id}"
              operation: "get"
      x-swagger-router-controller: "Default"
  /basket/{basket_id}:
    get:
      operationId: "basketBasket_idGET"
      parameters:
      - name: "basket_id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
      responses:
        default:
          description: "None"
          schema:
            $ref: "#/definitions/inline_response_default_6"
      x-swagger-router-controller: "Default"
securityDefinitions:
  administrator:
    type: "oauth2"
    authorizationUrl: "http://swagger.io/api/oauth/dialog"
    flow: "implicit"
    scopes:
      delete:/product: "No description"
      post:/product: "No description"
      put:/product: "No description"
definitions:
  basket_post_request_body:
    type: "object"
    required:
    - "basket"
    properties:
      basket:
        $ref: "#/definitions/basket_basket"
  basket:
    type: "object"
    properties:
      product ids:
        type: "array"
        items:
          type: "integer"
          format: "int32"
        maxItems: 100
      quantities:
        type: "array"
        description: "list of quantities, one for each product"
        items:
          type: "integer"
          format: "int32"
        maxItems: 100
      basket id:
        type: "integer"
        format: "int32"
    example:
    - product ids:
      - 14556
      - 14777
      - 12001
      - 12451
      quantities:
      - 1
      - 1
      - 1
      - 2
      basket id: 1
  basket_put_request_body:
    type: "object"
    required:
    - "product id"
    - "quantity"
    properties:
      product id:
        type: "integer"
        format: "int32"
      quantity:
        type: "integer"
        format: "int32"
    example:
    - product id: 14777
      quantity: 3
  order_put_request_body:
    type: "object"
    properties:
      product ids:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      quantities:
        type: "array"
        items:
          type: "integer"
          format: "int32"
        maxItems: 100
    example:
    - product ids:
      - 3433
      - 1212
      - 1276
      quantities:
      - 1
      - 1
      - 1
      - 2
  payment_post_request_body:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "float"
      date:
        type: "string"
        format: "date-time"
      type:
        type: "string"
    example:
    - amount: 28.2
      date: "8/2/2017 12:32"
      type: "credit"
  product_post_request_body:
    type: "object"
    properties:
      product:
        $ref: "#/definitions/inline_response_default_3_product"
  product:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      color:
        type: "string"
      category:
        type: "string"
      on sale:
        type: "boolean"
      available in:
        type: "integer"
        format: "int32"
      shipping:
        type: "string"
      doa:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
      cost:
        type: "number"
        format: "float"
    example:
    - name: "Chair"
      description: "Made in Stockholm"
      color: "Deep dark brown"
      category: "furniture"
      on sale: false
      available in: 48
      shipping: "worldwide"
      doa: 7
      id: 45
      cost: 15000.1
  product_put_request_body:
    type: "object"
    properties:
      product:
        $ref: "#/definitions/inline_response_default_3_product"
      description:
        type: "string"
  basket_get_default_response:
    type: "object"
    required:
    - "basket"
    properties:
      basket:
        $ref: "#/definitions/basket_basket"
    x-links:
    - path: "/order"
      operation: "post"
    - path: "/basket/{basket_id}"
      operation: "get"
  basket_post_default_response:
    type: "object"
    required:
    - "basket id"
    - "product ids"
    - "quantities"
    properties:
      product ids:
        type: "array"
        items:
          type: "integer"
          format: "int32"
        maxItems: 100
      quantities:
        type: "array"
        items:
          type: "integer"
          format: "int32"
        maxItems: 100
      basket id:
        type: "integer"
        format: "int32"
    example:
    - product ids:
      - 14556
      - 14777
      - 12001
      - 12451
      quantities:
      - 1
      - 1
      - 1
      - 2
      basket id: 1
    x-links:
    - path: "/order"
      operation: "post"
    - path: "/basket/{basket_id}"
      operation: "get"
  basket_put_default_response:
    type: "object"
    required:
    - "product ids"
    - "quantity"
    properties:
      product ids:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      quantity:
        type: "integer"
        format: "int32"
    example:
    - product ids:
      - 1
      - 4
      - 7
      - 7
      - 7
      quantity: 4
    x-links:
    - path: "/order"
      operation: "post"
    - path: "/basket/{basket_id}"
      operation: "get"
  order_get_default_response:
    type: "object"
    properties:
      product names:
        type: "array"
        items:
          type: "string"
      product descriptions:
        type: "array"
        items:
          type: "string"
    example:
    - product names:
      - "Chair"
      - "Keyboard"
      - "Dell Laptop"
      product descriptions:
      - "Made in Stockholm"
      - "Mechanical"
      - "IPS Screen"
    x-links:
    - path: "/order/{order_id}/payment"
      operation: "post"
    - path: "/order/{order_id}"
      operation: "get"
    - path: "/order/{order_id}"
      operation: "delete"
    - path: "/order/{order_id}"
      operation: "put"
  order_post_200_response:
    type: "object"
    x-links:
    - path: "/order/{order_id}/payment"
      operation: "post"
    - path: "/order/{order_id}"
      operation: "get"
    - path: "/order/{order_id}"
      operation: "delete"
    - path: "/order/{order_id}"
      operation: "put"
  order_put_200_response:
    type: "object"
    x-links:
    - path: "/order/{order_id}/payment"
      operation: "post"
    - path: "/order/{order_id}"
      operation: "get"
    - path: "/order/{order_id}"
      operation: "delete"
    - path: "/order/{order_id}"
      operation: "put"
  order_delete_200_response:
    type: "object"
    x-links:
    - path: "/search"
      operation: "get"
  payment_post_default_response:
    type: "object"
    x-links:
    - path: "/order/{order_id}"
      operation: "get"
  payment_post_400_response:
    type: "object"
    x-links:
    - path: "/order/{order_id}/payment"
      operation: "post"
    - path: "/order/{order_id}"
      operation: "get"
  product_get_default_response:
    type: "object"
    properties:
      product:
        $ref: "#/definitions/inline_response_default_3_product"
    x-links:
    - path: "/basket"
      operation: "post"
  product_post_default_response:
    type: "object"
    properties:
      product:
        $ref: "#/definitions/inline_response_default_3_product"
  product_put_default_response:
    type: "object"
    required:
    - "category"
    - "description"
    - "name"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      category:
        type: "string"
    example:
    - name: "bag"
      description: "small bag"
      category: "sports"
  product_delete_default_response:
    type: "object"
    properties:
      product:
        $ref: "#/definitions/inline_response_default_3_product"
  search_get_default_response:
    type: "object"
    required:
    - "name"
    - "price"
    properties:
      name:
        type: "string"
      price:
        type: "number"
        format: "float"
    example:
    - name: "keyboard"
      price: 69.99
    x-links:
    - path: "/product/{product_id}"
      operation: "get"
  basket_put_request_body_1:
    type: "object"
    required:
    - "product id"
    - "quantity"
    properties:
      product id:
        type: "integer"
        format: "int32"
      quantity:
        type: "integer"
        format: "int32"
    example:
    - product id: 14777
      quantity: 3
  inline_response_default:
    type: "object"
    required:
    - "product ids"
    - "quantity"
    properties:
      product ids:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      quantity:
        type: "integer"
        format: "int32"
    example: "[{product ids=[1, 4, 7, 7, 7], quantity=4}]"
    x-links:
    - path: "/order"
      operation: "post"
    - path: "/basket/{basket_id}"
      operation: "get"
  basket_basket:
    type: "object"
    properties:
      product ids:
        type: "array"
        items:
          type: "integer"
          format: "int32"
        maxItems: 100
      quantities:
        type: "array"
        description: "list of quantities, one for each product"
        items:
          type: "integer"
          format: "int32"
        maxItems: 100
      basket id:
        type: "integer"
        format: "int32"
    example: "[{\"product ids\":[14556,14777,12001,12451],\"quantities\":[1,1,1,2],\"\
      basket id\":1}]"
  basket_post_request_body_1:
    type: "object"
    required:
    - "basket"
    properties:
      basket:
        $ref: "#/definitions/basket_basket"
  inline_response_default_1:
    type: "object"
    required:
    - "basket id"
    - "product ids"
    - "quantities"
    properties:
      product ids:
        type: "array"
        items:
          type: "integer"
          format: "int32"
        maxItems: 100
      quantities:
        type: "array"
        items:
          type: "integer"
          format: "int32"
        maxItems: 100
      basket id:
        type: "integer"
        format: "int32"
    example: "[{product ids=[14556, 14777, 12001, 12451], quantities=[1, 1, 1, 2],\
      \ basket id=1}]"
    x-links:
    - path: "/order"
      operation: "post"
    - path: "/basket/{basket_id}"
      operation: "get"
  inline_response_default_2:
    type: "object"
    properties:
      product names:
        type: "array"
        items:
          type: "string"
      product descriptions:
        type: "array"
        items:
          type: "string"
    example: "[{product names=[Chair, Keyboard, Dell Laptop], product descriptions=[Made\
      \ in Stockholm, Mechanical, IPS Screen]}]"
    x-links:
    - path: "/order/{order_id}/payment"
      operation: "post"
    - path: "/order/{order_id}"
      operation: "get"
    - path: "/order/{order_id}"
      operation: "delete"
    - path: "/order/{order_id}"
      operation: "put"
  order_put_request_body_1:
    type: "object"
    properties:
      product ids:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      quantities:
        type: "array"
        items:
          type: "integer"
          format: "int32"
        maxItems: 100
    example:
    - product ids:
      - 3433
      - 1212
      - 1276
      quantities:
      - 1
      - 1
      - 1
      - 2
  inline_response_default_3_product:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      color:
        type: "string"
      category:
        type: "string"
      on sale:
        type: "boolean"
      available in:
        type: "integer"
        format: "int32"
      shipping:
        type: "string"
      doa:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
      cost:
        type: "number"
        format: "float"
    example: "[{\"name\":\"Chair\",\"description\":\"Made in Stockholm\",\"color\"\
      :\"Deep dark brown\",\"category\":\"furniture\",\"on sale\":false,\"available\
      \ in\":48,\"shipping\":\"worldwide\",\"doa\":7,\"id\":45,\"cost\":15000.1}]"
  inline_response_default_3:
    type: "object"
    properties:
      product:
        $ref: "#/definitions/inline_response_default_3_product"
    example:
      product: "[{\"name\":\"Chair\",\"description\":\"Made in Stockholm\",\"color\"\
        :\"Deep dark brown\",\"category\":\"furniture\",\"on sale\":false,\"available\
        \ in\":48,\"shipping\":\"worldwide\",\"doa\":7,\"id\":45,\"cost\":15000.1}]"
    x-links:
    - path: "/basket"
      operation: "post"
  product_put_request_body_1:
    type: "object"
    properties:
      product:
        $ref: "#/definitions/inline_response_default_3_product"
      description:
        type: "string"
  inline_response_default_4:
    type: "object"
    required:
    - "category"
    - "description"
    - "name"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      category:
        type: "string"
    example: "[{name=bag, description=small bag, category=sports}]"
  product_post_request_body_1:
    type: "object"
    properties:
      product:
        $ref: "#/definitions/inline_response_default_3_product"
    example:
      product: "[{\"name\":\"Chair\",\"description\":\"Made in Stockholm\",\"color\"\
        :\"Deep dark brown\",\"category\":\"furniture\",\"on sale\":false,\"available\
        \ in\":48,\"shipping\":\"worldwide\",\"doa\":7,\"id\":45,\"cost\":15000.1}]"
  inline_response_default_5:
    type: "object"
    required:
    - "name"
    - "price"
    properties:
      name:
        type: "string"
      price:
        type: "number"
        format: "float"
    example: "[{name=keyboard, price=69.99}]"
    x-links:
    - path: "/product/{product_id}"
      operation: "get"
  payment_post_request_body_1:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "float"
      date:
        type: "string"
        format: "date-time"
      type:
        type: "string"
    example:
    - amount: 28.2
      date: "8/2/2017 12:32"
      type: "credit"
  inline_response_default_6:
    type: "object"
    required:
    - "basket"
    properties:
      basket:
        $ref: "#/definitions/basket_basket"
    example:
      basket: "[{\"product ids\":[14556,14777,12001,12451],\"quantities\":[1,1,1,2],\"\
        basket id\":1}]"
    x-links:
    - path: "/order"
      operation: "post"
    - path: "/basket/{basket_id}"
      operation: "get"
